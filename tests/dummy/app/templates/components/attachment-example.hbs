<div data-element-centered class="section top-section">
  <p>Drop an <span class="no-wrap">\{{#attach-tooltip}}</span> or <span class="no-wrap">\{{#attach-popover}}</span> in any element or component to get started.</p>
</div>
<div data-element-centered class="section">
  <div data-element-centered class="floating-area justify-around col-lg-10 col-md-12 col-sm-16 col-lm-20 col-xs-24">
    <button class="hover-me">
      Tooltip me, captain!

      <AttachTooltip
        @animation={{tooltipData.animation}}
        @arrow={{tooltipData.arrow}}
        @autoUpdate={{tooltipData.autoUpdate}}
        @hideDelay={{tooltipData.hideDelay}}
        @hideDuration={{tooltipData.hideDuration}}
        @hideOn={{tooltipData.hideOn}}
        @interactive={{tooltipData.interactive}}
        @isShown={{tooltipData.isShown}}
        @onChange={{action (mut tooltipData.isShown)}}
        @placement={{tooltipData.placement}}
        @renderInPlace={{tooltipData.renderInPlace}}
        @showDelay={{tooltipData.showDelay}}
        @showDuration={{tooltipData.showDuration}}
        @showOn={{tooltipData.showOn}}
        data-test-demo-tooltip
      >
        Hello world!
      </AttachTooltip>
    </button>

    <button class="hover-me">
      Click me, captain!

      <AttachPopover
        @animation={{popoverData.animation}}
        @arrow={{popoverData.arrow}}
        @autoUpdate={{popoverData.autoUpdate}}
        @class="ember-attacher-popover custom-popover-css"
        @hideDelay={{popoverData.hideDelay}}
        @hideDuration={{popoverData.hideDuration}}
        @hideOn={{popoverData.hideOn}}
        @interactive={{popoverData.interactive}}
        @isShown={{popoverData.isShown}}
        @lazyRender={{popoverData.lazyRender}}
        @onChange={{action (mut popoverData.isShown)}}
        @placement={{popoverData.placement}}
        @renderInPlace={{popoverData.renderInPlace}}
        @showDelay={{popoverData.showDelay}}
        @showDuration={{popoverData.showDuration}}
        @showOn={{popoverData.showOn}}
        data-test-demo-popover as |emberAttacher|
      >
        <p>Popovers and tooltips, oh my!</p>

        <button {{action emberAttacher.hide}}>Close</button>
      </AttachPopover>
    </button>
  </div>
</div>
{{#if (and service.arrow (eq service.animation "fill"))}}
  <div data-element-centered class="section">
    <h2>Warning: `animation: "fill"` is not compatible with `arrow: true`</h2>
  </div>
{{/if}}

{{#if service.renderInPlace}}
  <div data-element-centered class="section flexi-fit flexi-vertical">
    <h3>Note: renderInPlace can cause z-index issues.</h3>
    <h3>Hover over the renderInPlace attr for more details.</h3>
  </div>
{{/if}}
<div data-element-centered class="edit-section">
  <div data-element-vbox class="fit-lm">
    <div data-element-hbox class="nav-bar">
      <div data-element-centered class="col-xs-12 nav{{if this.isConfiguringTooltip ' active'}}" {{action 'setIsConfiguringTooltip' true}}>
        \{{#attach-tooltip}}
      </div>
      <div data-element-centered  class="col-xs-12 nav{{unless this.isConfiguringTooltip ' active'}}" {{action 'setIsConfiguringTooltip' false}}>
        \{{#attach-popover}}
      </div>
    </div>

  <div data-element-vbox class="edit-me">
    <div data-element-hbox><div data-element-centered class="flexi-fit">&lt;button class="hover-me"></div></div>
    <div data-element-hbox>
      <div data-element-centered class="flexi-fit">
        &nbsp;&nbsp;
        {{if this.isConfiguringTooltip 'Tooltip me, captain!' 'Click me, captain!'}}
      </div>
    </div>
    <div data-element-hbox>&nbsp;</div>
    <div data-element-box class="flexi-fit horizontal-lm">
      <div data-element-hbox class="no-wrap flexi-fit">
        <div data-element-centered class="flexi-fit">
          &nbsp;&nbsp;\{{
          <span class="underlined">
            {{if this.isConfiguringTooltip '#attach-tooltip' '#attach-popover'}}

            {{#attach-tooltip animation='shift'}}
              {{#if this.isConfiguringTooltip}}
                This component has the default settings. The \{{attach-tooltip}} component
                automatically gains the ember-attacher-floating and ember-attacher-tooltip classes.
                It also modifies the target element's aria-describedby to point to the tooltip.
                For manual control, use \{{attach-popover}} instead.
              {{else}}
                This is a click-triggered \{{attach-popover}}. Unlike \{{attach-tooltip}}, it does
                not modify the target's aria-describedby, or have any default classes.
              {{/if}}
            {{/attach-tooltip}}
          </span>
          &nbsp;
        </div>
      </div>
      <div data-element-hbox class="flexi-fit">
        <div data-element-box class="hidden-lm fit-xs">&nbsp;&nbsp;&nbsp;&nbsp;</div>
        <div data-element-centered class="flexi-fit">
          animation="<PowerSelect
                      @onChange={{action (mut service.animation)}}
                      @options={{animationOptions}}
                      @searchEnabled={{false}}
                      @selected={{service.animation}}
                      @triggerClass="button large" as |animationOption|
                     >
                      {{animationOption}}
                     </PowerSelect>"
        </div>
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        arrow=<button class="button medium" {{action "toggleArrow"}}>{{service.arrow}}</button>
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        hideDelay={{input class="button medium"
                          min="0"
                          pattern="[0-9]"
                          placeholder="0"
                          step="100"
                          type="number"
                          value=service.hideDelay}}
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          hideDuration

          {{#attach-tooltip}}
            How long the hide animation will take.
          {{/attach-tooltip}}
        </span>
        ={{input class="button medium"
                 min="0"
                 pattern="[0-9]"
                 placeholder="0"
                 step="100"
                 type="number"
                 value=service.hideDuration}}
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          hideOn

          {{#attach-tooltip animation='shift'}}
            Any combination of "blur", "click", "clickout", "escapekey", and "mouseleave".
            <p>clickout: hides the attachment when the user clicks outside the target. When interactive=true, clicking the attachment will not trigger a hide event.</p>
            <p>escapekey: hides the attachment when the user presses the escape key</p>
          {{/attach-tooltip}}
        </span>
        ="<PowerSelect
            @onChange={{action (mut service.hideOn)}}
            @options={{hideOnOptions}}
            @searchEnabled={{false}}
            @selected={{service.hideOn}}
            @triggerClass="button xlarge" as |hideOnOption|
          >
            {{hideOnOption}}
          </PowerSelect>"
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          interactive

          {{#attach-tooltip}}
            Interactive tooltips will not close when clicked or hovered over.
          {{/attach-tooltip}}
        </span>
        =
        <button class="button medium" {{action "toggleInteractive"}}>
          {{service.interactive}}
        </button>
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          isShown

          {{#attach-tooltip}}
            Manually controls whether or not the attacher should be open or closed.
          {{/attach-tooltip}}
        </span>
        =
        <button class="button medium" {{action "toggleIsShown"}}>{{service.isShown}}</button>
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          lazyRender

          {{#attach-tooltip}}
            If you want ember-attacher to postpone rendering until first interacted.
          {{/attach-tooltip}}
        </span>
        =
        <button class="button medium" {{action "toggleLazyRender"}}>{{service.lazyRender}}</button>
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          onChange

          {{#attach-tooltip}}
            An action to be fired when the attachment's visibility changes.
          {{/attach-tooltip}}
        </span>
        =(action (mut isShown))
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        placement="<PowerSelect
                    @onChange={{action (mut service.placement)}}
                    @options={{placementOptions}}
                    @searchEnabled={{false}}
                    @selected={{service.placement}}
                    @triggerClass="button large" as |placementOption|
                  >
                    {{placementOption}}
                  </PowerSelect>"
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          autoUpdate

          {{#attach-tooltip animation='shift'}}
            The floating element can detach from the reference element if the user scrolls or resizes the screen, so its position needs to be updated again to ensure it stays anchored.
            To solve this, autoUpdate adds listeners that will automatically call an update function
          {{/attach-tooltip}}
        </span>
        =
        <button class="button medium" {{action "toggleAutoUpdate"}}>
          {{service.autoUpdate}}
        </button>
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          renderInPlace

          {{#attach-tooltip animation="shift"}}
            Elements that exist deep within the document tree are given an implicitly lower z-index
            value than elements that aren't as deep in the tree; this has the effect of hiding our
            floating element behind less-nested elements. Due to the way z-indexing works, we cannot simply
            add a higher z-index value to our floating element. To avoid this issue, we render the element
            on the document body, giving it the highest default z-index value. Toggling
            renderInPlace will prevent the floating element from being rendered elsewhere, but may cause the
            aforementioned z-index issues.
          {{/attach-tooltip}}
        </span>
        =
        <button class="button medium" {{action "toggleRenderInPlace"}}>
          {{service.renderInPlace}}
        </button>
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        showDelay={{input class="button medium"
                          min="0"
                          pattern="[0-9]"
                          placeholder="0"
                          step="100"
                          type="number"
                          value=service.showDelay}}
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          showDuration

          {{#attach-tooltip}}
            How long the show animation will take.
          {{/attach-tooltip}}
        </span>
        ={{input class="button medium"
                 min="0"
                 pattern="[0-9]"
                 placeholder="0"
                 step="100"
                 type="number"
                 value=service.showDuration}}
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <span class="underlined">
          showOn

          {{#attach-tooltip}}
            For performance reasons, we recommend using some combination of "mouseenter", "focus",
            and "click", though you can use any event listener you want.
          {{/attach-tooltip}}
        </span>
        ="<PowerSelect
            @onChange={{action (mut service.showOn)}}
            @options={{showOnOptions}}
            @searchEnabled={{false}}
            @selected={{service.showOn}}
            @triggerClass="button xlarge" as |showOnOption|
          >
            {{showOnOption}}
          </PowerSelect>"
      </div>
    </div>
    <div data-element-hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<div data-element-box class="flexi-fit horizontal-lm">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      <div data-element-centered class="flexi-fit">
        <vbox>
          {{#if isConfiguringTooltip}}
            <div data-element-hbox>
              <div data-element-centered class="flexi-fit">
                <span class="underlined">
                  class

                  {{#attach-tooltip}}
                    The \{{attach-tooltip}} component automatically adds
                    ember-attacher-floating and ember-attacher-tooltip to the class string.
                  {{/attach-tooltip}}
                </span>
                ='optional-class-here'}}
              </div>
            </div>
          {{else}}
            <div data-element-hbox><div data-element-centered class="flexi-fit">class="ember-attacher-floating custom-popover-css"</div></div>
            <div data-element-hbox><div data-element-centered class="flexi-fit">as |attacher|}}</div></div>
          {{/if}}
        </vbox>
      </div>
    </div>
    {{#if isConfiguringTooltip}}
      <div data-element-hbox>&nbsp;&nbsp;&nbsp;&nbsp;Hello world!</div>
    {{else}}
      <div data-element-vbox>
        <div data-element-hbox class="flexi-fit"><div data-element-centered class="flexi-fit">&nbsp;&nbsp;&nbsp;&nbsp;&lt;p></div></div>
        <div data-element-hbox class="flexi-fit"><div data-element-centered class="flexi-fit">
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Popovers and tooltips, oh my!
        </div></div>
        <div data-element-hbox class="flexi-fit"><div data-element-centered class="flexi-fit">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/p></div></div>
        <div data-element-hbox>
          &nbsp;&nbsp;&nbsp;&nbsp;
          <div data-element-centered class="flexi-fit">
            &lt;button \{{action attacher.hide}}>
          </div>
        </div>
        <div data-element-hbox>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <div data-element-centered class="flexi-fit">
            Close
          </div>
        </div>
        <div data-element-hbox>
          &nbsp;&nbsp;&nbsp;&nbsp;
          <div data-element-centered class="flexi-fit">
            &lt;\button>
          </div>
        </div>
      </div>
    {{/if}}
    <div data-element-hbox>
      &nbsp;&nbsp;\{{/{{if isConfiguringTooltip 'attach-tooltip}}' 'attach-popover}}'}}
    </div>
    <div data-element-hbox>
      <div data-element-centered class="flexi-fit">&lt;\button></div>
    </div>
  </div>
  </div>
</div>
<div data-element-vbox class="section align-center">
  <h2>Credits</h2>
  <div data-element-vbox class="col-md-12 col-sm-16 col-lm-20 col-xs-24 flexi-fit">
    <p>Ember-attacher was inspired by tippy.js and ember-tooltips.</p>
    <p>It was built with love to provide a tooltip and popover addon based on floating-ui, a modern replacement to tether.js, while taking advantage of everything Ember.js has to offer.</p>
  </div>
</div>
